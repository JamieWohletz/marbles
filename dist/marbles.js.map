{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 96ca497b5a8ef648402e","webpack:///./src/marbles.js","webpack:///./src/util.js"],"names":["util","Marbles","routingGraph","win","window","IMMUTABLE_GRAPH","DYNAMIC_SEGMENT_REGEX","DIGIT_SEGMENT_REGEX","observers","keys","reduce","obj","key","emptyObject","graphStack","expandSegment","segment","data","replace","segmentKey","extractSegmentData","templateSegment","segmentWithData","dynamicSegments","match","RegExp","source","value","index","assign","segmentToRegex","regexed","findListNode","nodeId","list","next","id","chainData","upToNode","stop","isObject","graphNodeToListNode","graph","graphNode","deactivateGraphNode","force","immutableGraph","cloneDeep","recDeactivate","target","current","g","curr","dependency","active","children","forEach","childId","activateGraphNode","parents","filter","indexOf","dfsActivate","searchId","currentId","dependencyMet","search","depMet","activated","parentId","retG","appendNode","node","head","clonedHead","last","parseHash","hashRoute","routeGraph","recParse","hash","rootId","visitedNodes","root","child","newG","matches","substrIndex","length","arrayHead","substr","newGraph","buildGraph","listToHashRoute","listReduce","graphToLinkedList","listHead","nextListNode","newHead","logGraph","lastGraph","peek","JSON","stringify","push","graphToList","listDiff","from","against","arr","concat","notifyObservers","obsObj","oldGraph","oldListHead","newListHead","removed","insertedNodes","obs","inserted","insertOrRemove","insert","routeId","dataToUse","isString","Array","location","subscribe","subscriptions","matchingKeys","sub","noop","unsubscribe","route","event","handler","isFunction","matchingObservers","pull","call","remove","getData","step","originalHash","pop","history","replaceState","listener","bind","start","addEventListener","removeEventListener","Object","create","any","isArray","parse","args","apply","array","undefined","values","map","val","results","splice","returnArray","subArray","without","newArray","slice","isList","listish","assertList","TypeError","listForEach","iterator","i","listMap","newNodes","reduceRight","tail","reducer","accumulator","foldl","f","a","batchAsyncActions","fns","callback","resolvedCount","fn","result"],"mappings":"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","file":"marbles.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"marbles\"] = factory();\n\telse\n\t\troot[\"marbles\"] = factory();\n})(this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 96ca497b5a8ef648402e","import * as util from './util.js';\n\nexport default class Marbles {\n  constructor(routingGraph, win = window) {\n    const IMMUTABLE_GRAPH = routingGraph;\n    const DYNAMIC_SEGMENT_REGEX = /:[a-zA-Z]+(?=\\/?)/;\n    const DIGIT_SEGMENT_REGEX = /\\d+(?=\\/?)/;\n    const observers = util.keys(IMMUTABLE_GRAPH).reduce((obj, key) => {\n      obj[key] = [];\n      return obj;\n    }, util.emptyObject());\n    const graphStack = [];\n\n    // Private methods\n    function expandSegment(segment, data) {\n      return segment.replace(\n        DYNAMIC_SEGMENT_REGEX,\n        segmentKey => data[segmentKey.replace(':', '')]\n      );\n    }\n\n    function extractSegmentData(templateSegment, segmentWithData) {\n      const dynamicSegments = templateSegment.match(\n        new RegExp(DYNAMIC_SEGMENT_REGEX.source, 'g')\n      ) || [];\n      return (segmentWithData.match(DIGIT_SEGMENT_REGEX) || []).reduce((data, value, index) => {\n        data[dynamicSegments[index].replace(':', '')] = value;\n        return util.assign(util.emptyObject(), data);\n      },\n        util.emptyObject()\n      );\n    }\n\n    function segmentToRegex(segment) {\n      // It just got weird\n      const regexed = segment.replace(\n        new RegExp(DYNAMIC_SEGMENT_REGEX.source, 'g'),\n        DIGIT_SEGMENT_REGEX.source\n      );\n      return new RegExp(regexed);\n    }\n\n    function findListNode(nodeId, list) {\n      let next = list;\n      while (next) {\n        if (next.id === nodeId) {\n          return next;\n        }\n        next = next.next;\n      }\n      return null;\n    }\n\n    function chainData(list, upToNode) {\n      const data = util.emptyObject();\n      const stop = util.isObject(upToNode) ? upToNode : { data: {} };\n      let next = list;\n      while (next && next !== stop) {\n        util.assign(data, next.data);\n        next = next.next;\n      }\n      return util.assign(data, stop.data);\n    }\n\n    function graphNodeToListNode(id, graph) {\n      const graphNode = graph[id];\n      return util.assign(util.emptyObject(), graphNode, {\n        id,\n        segment: expandSegment(graphNode.segment, graphNode.data),\n        next: null,\n      });\n    }\n\n    function deactivateGraphNode(force, nodeId, immutableGraph) {\n      const graph = util.cloneDeep(immutableGraph);\n      function recDeactivate(target, current, g) {\n        const curr = g[current];\n        if (target === current || curr.dependency === target || force) {\n          curr.active = false;\n          curr.data = util.emptyObject();\n        }\n        curr.children.forEach(childId => recDeactivate(target, childId, g));\n      }\n      recDeactivate(nodeId, nodeId, graph);\n      return graph;\n    }\n\n    function activateGraphNode(nodeId, data, immutableGraph) {\n      const graph = util.cloneDeep(immutableGraph);\n      const parents = util.keys(graph).filter(key => graph[key].children.indexOf(nodeId) !== -1);\n      function dfsActivate(searchId, currentId, dependencyMet) {\n        const curr = graph[currentId];\n        const search = graph[searchId];\n        if (currentId === searchId && dependencyMet) {\n          search.active = true;\n          search.data = data;\n          return true;\n        }\n        else if (currentId === searchId && !dependencyMet) {\n          return false;\n        }\n        return curr.children.reduce(\n          (depMet, childId) => dfsActivate(searchId, childId, depMet),\n          dependencyMet || currentId === search.dependency\n        );\n      }\n\n      const activated = dfsActivate(nodeId, 'root', false);\n      if (activated) {\n        // deactivate immediate siblings\n        return parents.reduce((g, parentId) =>\n          g[parentId].children.filter(id => id !== nodeId).reduce((retG, childId) =>\n            deactivateGraphNode(true, childId, retG),\n            g),\n          graph);\n      }\n      return graph;\n    }\n\n    function appendNode(node, head) {\n      const clonedHead = util.cloneDeep(head);\n      let next = clonedHead;\n      let last;\n      let dependencyMet = false;\n      while (next) {\n        dependencyMet = dependencyMet || next.id === node.dependency;\n        last = next;\n        next = next.next;\n      }\n      if (dependencyMet) {\n        last.next = util.cloneDeep(node);\n      }\n      return clonedHead;\n    }\n\n    function parseHash(hashRoute, routeGraph) {\n      function recParse(hash, rootId, visitedNodes, graph) {\n        const root = graph[rootId];\n        return root.children.reduce((g, childId) => {\n          const child = graph[childId];\n          let newG = g;\n          const matches = hash.match(segmentToRegex(child.segment)) || [];\n          const substrIndex = matches.index ? matches.index + matches[0].length : 0;\n          if (visitedNodes[childId]) {\n            return newG;\n          }\n          visitedNodes[childId] = true;\n          if (matches.length > 0 && (graph[child.dependency] || util.emptyObject()).active) {\n            newG = activateGraphNode(\n              childId,\n              extractSegmentData(child.segment, util.arrayHead(matches)),\n              graph\n            );\n          }\n          return recParse(hash.substr(substrIndex), childId, visitedNodes, newG);\n        }, graph);\n      }\n      const newGraph = util.cloneDeep(routeGraph);\n      return recParse(hashRoute, 'root', {}, newGraph);\n    }\n\n    function buildGraph(hash) {\n      return parseHash(hash, IMMUTABLE_GRAPH);\n    }\n\n    function listToHashRoute(head) {\n      return util.listReduce((hash, node) => {\n        if (node.segment) {\n          return `${hash}${node.segment}/`;\n        }\n        return hash;\n      }, '#', head);\n    }\n\n    function graphToLinkedList(graph, rootId, listHead, visitedNodes) {\n      const root = graph[rootId];\n      const nextListNode = graphNodeToListNode(rootId, graph);\n      const newHead = root.active ? appendNode(nextListNode, listHead) : util.cloneDeep(listHead);\n\n      return root.children.reduce(\n        (head, childId) => {\n          if (visitedNodes[childId]) {\n            return head;\n          }\n          visitedNodes[childId] = true;\n          return graphToLinkedList(graph, childId, head, visitedNodes);\n        },\n        newHead\n      );\n    }\n\n    function logGraph(newGraph) {\n      const lastGraph = util.peek(graphStack);\n      if (!lastGraph || JSON.stringify(lastGraph) !== JSON.stringify(newGraph)) {\n        graphStack.push(newGraph);\n      }\n      return newGraph;\n    }\n\n    function graphToList(graph) {\n      if (!graph) {\n        return null;\n      }\n      return graphToLinkedList(\n        graph,\n        'root',\n        graphNodeToListNode('root', graph),\n        util.emptyObject()\n      );\n    }\n\n    function listDiff(from, against) {\n      return util.listReduce((arr, node) => {\n        if (!findListNode(node.id, against)) {\n          return arr.concat(node);\n        }\n        return arr;\n      }, [], from);\n    }\n\n    function notifyObservers(obsObj, oldGraph, newGraph) {\n      const oldListHead = graphToList(oldGraph);\n      const newListHead = graphToList(newGraph);\n      const removed = listDiff(oldListHead, newListHead);\n      const insertedNodes = listDiff(newListHead, oldListHead);\n      removed.forEach(({ id }) => {\n        obsObj[id].forEach((obs) => {\n          obs.removed();\n        });\n      });\n      insertedNodes.forEach((node) => {\n        obsObj[node.id].forEach((obs) => {\n          obs.inserted(chainData(newListHead, node));\n        });\n      });\n    }\n\n    function insertOrRemove(insert, routeId, data) {\n      let dataToUse = data;\n      if (!util.isString(routeId) || !IMMUTABLE_GRAPH[routeId]) {\n        return null;\n      }\n      if (data === null || typeof data !== 'object' || data instanceof Array) {\n        dataToUse = util.emptyObject();\n      }\n      const graph = buildGraph(win.location.hash);\n      let newGraph;\n      if (insert) {\n        newGraph = activateGraphNode(routeId, dataToUse, graph);\n      }\n      else {\n        newGraph = deactivateGraphNode(false, routeId, graph);\n      }\n      win.location.hash = listToHashRoute(graphToList(newGraph));\n      return this;\n    }\n    // End private methods\n\n    // Public methods\n    this.subscribe = function subscribe(subscriptions) {\n      if (!util.isObject(subscriptions)) {\n        return false;\n      }\n      const matchingKeys = util.keys(subscriptions).filter(key => !!observers[key]);\n      if (matchingKeys.length === 0) {\n        return false;\n      }\n      matchingKeys.forEach(key => {\n        const sub = subscriptions[key];\n        observers[key].push({\n          inserted: sub.inserted || util.noop,\n          removed: sub.removed || util.noop,\n        });\n      });\n      return true;\n    };\n    this.unsubscribe = function unsubscribe(route, event, handler) {\n      if (\n        !util.isString(route) ||\n        !util.isString(event) ||\n        !util.isFunction(handler) ||\n        !observers[route]\n      ) {\n        return false;\n      }\n      const matchingObservers = observers[route].filter((obs) => obs[event] === handler);\n      return util.pull(matchingObservers, observers[route]);\n    };\n    this.insert = function insert(routeId, data) {\n      return insertOrRemove.call(this, true, routeId, data);\n    };\n    this.remove = function remove(routeId) {\n      return insertOrRemove.call(this, false, routeId);\n    };\n    this.getData = function getData() {\n      return chainData(graphToList(buildGraph(win.location.hash)));\n    };\n    this.step = function step() {\n      const originalHash = win.location.hash;\n      const graph = buildGraph(originalHash);\n      notifyObservers(observers, graphStack.pop(), graph);\n      logGraph(graph);\n      win.history.replaceState(util.emptyObject(), '', listToHashRoute(graphToList(graph)));\n      return this;\n    };\n\n    const listener = this.step.bind(this);\n    this.start = function start() {\n      win.addEventListener('hashchange', listener);\n      return this;\n    };\n    this.stop = function stop() {\n      win.removeEventListener('hashchange', listener);\n      return this;\n    };\n    // End public methods\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/marbles.js","function emptyObject() {\n  return Object.create(null);\n}\n\nfunction isObject(any) {\n  return typeof any === 'object' && any !== null && !(any instanceof Array);\n}\n\nfunction isArray(any) {\n  return any instanceof Array;\n}\n\nfunction isString(any) {\n  return typeof any === 'string';\n}\n\nfunction isFunction(any) {\n  return typeof any === 'function';\n}\n\nfunction keys(obj) {\n  return Object.keys(obj);\n}\n\nfunction cloneDeep(obj) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\nfunction assign(...args) {\n  return Object.assign.apply(this, args);\n}\n\nfunction arrayHead(array) {\n  if (typeof array === 'undefined' || !(array instanceof Array)) {\n    return undefined;\n  }\n  return array[0];\n}\n\nfunction pull(values, array) {\n  return values.map((val) => {\n    let index = array.indexOf(val);\n    let results = [];\n    while (index !== -1) {\n      results = results.concat(array.splice(index, 1));\n      index = array.indexOf(val);\n    }\n    return results;\n  })\n    .reduce((returnArray, subArray) => returnArray.concat(subArray), [])\n    .reduce((returnArray, val) => {\n      if (returnArray.indexOf(val) !== -1) {\n        return returnArray;\n      }\n      return returnArray.concat(val instanceof Array ? [val] : val);\n    }, []);\n}\n\nfunction without(values, array) {\n  const newArray = array.slice();\n  pull(values, newArray);\n  return newArray;\n}\n\nfunction peek(arr) {\n  if (!arr || !(arr instanceof Array)) {\n    return null;\n  }\n  return arr[arr.length - 1] || null;\n}\n\nfunction noop() { }\n\nfunction isList(listish) {\n  return listish === null || (isObject(listish) && typeof listish.next === 'object');\n}\n\nfunction assertList(list) {\n  if (!isList(list)) {\n    throw new TypeError('listForEach requires a list! Lists are objects with a `next` property.');\n  }\n}\n\nfunction listForEach(iterator, list) {\n  assertList(list);\n  let next = list;\n  let i = 0;\n  while (next) {\n    iterator(next, i);\n    next = next.next;\n    i = i + 1;\n  }\n}\n\nfunction listMap(iterator, list) {\n  const newNodes = [];\n  listForEach((node, index) => {\n    newNodes.push(iterator(node, index));\n  }, list);\n  return newNodes.reduceRight((tail, node) => assign({}, node, {\n    next: tail\n  }), null);\n}\n\nfunction listReduce(reducer, accumulator, list) {\n  return (function foldl(f, a, head, i) {\n    if (head === null) {\n      return a;\n    }\n    assertList(head);\n    return foldl(f, f(a, head, i), head.next, i + 1);\n  }(reducer, accumulator, list, 0));\n}\n\nfunction batchAsyncActions(fns, callback) {\n  if (!isArray(fns)) {\n    throw new TypeError(\n      'batchAsyncResults() expects an array of functions as the first parameter.'\n    );\n  }\n  let resolvedCount = 0;\n  const results = [];\n  fns.forEach((fn) => {\n    fn((result) => {\n      resolvedCount += 1;\n      results.push(result);\n      if (resolvedCount === fns.length) {\n        callback(results);\n      }\n    });\n  });\n}\n\nexport {\n  emptyObject,\n  isArray,\n  isObject,\n  isFunction,\n  isString,\n  isList,\n  listForEach,\n  listMap,\n  listReduce,\n  batchAsyncActions,\n  noop,\n  keys,\n  peek,\n  cloneDeep,\n  assign,\n  arrayHead,\n  pull,\n  without\n};\n\n\n\n// WEBPACK FOOTER //\n// ./src/util.js"],"sourceRoot":""}